name: 'CI for building docker image and instance'
on: [push]
  
jobs:
  build:
    name: 'Using Ubuntu Image'
    runs-on: ubuntu-latest
    steps:
    - name: 'Check out code'
      uses: actions/checkout@v3
      
    - name: 'Install node and npm'
      run: |
         sudo apt update -y
         sudo apt install nodejs npm

    - name: 'Building Docker Image'
      run: docker build . --file Dockerfile --build-arg RUNNER_VERSION=2.303.0 --tag github-runner --no-cache --progress=plain  
    
    - name: 'List Docker Image'
      run: docker images   
         
    - name: 'Obtain a GitHub App Installation Access Token'
      id: githubAppAuth
      run: |
        TOKEN="$(/usr/local/bin/npx -y obtain-github-app-installation-access-token ci ${{ secrets.GH_APP_CREDENTIALS_TOKEN }})"
          echo "::add-mask::$TOKEN"
          echo "token=$TOKEN" >>$GITHUB_OUTPUT
          echo ${{ steps.githubAppAuth.outputs.token }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_APP_CREDENTIALS_TOKEN: ${{ secrets.GH_APP_CREDENTIALS_TOKEN }}
        
    - name: 'Use the obtained GitHub App Installation Access Token'
      run: |
        curl -X POST -H 'Content-Type: application/json' \
           -H "Authorization: Bearer ${{ steps.githubAppAuth.outputs.token }}" \
           -d '{"context":"test","state":"success"}' \
           "https://api.github.com/repos/ravigundapi/gh-sh-runner/statuses/$GITHUB_SHA?access_token=$GITHUB_TOKEN"
      env:
        GITHUB_TOKEN: ${{ steps.githubAppAuth.outputs.token }}

    - name: 'Fetch Reg Token'
      id: RegGithubAppAuth
      run: |
        GH_TOKEN=$(curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ steps.githubAppAuth.outputs.token }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/ravigundapi/gh-sh-runner/actions/runners/registration-token | jq .token --raw-output)
        echo "GH_TOKEN=$GH_TOKEN" >> $GITHUB_ENV
      
    - name: 'Building GitHub Hosted Runner'
      run: docker run -e GH_OWNER=https://github.com/ravigundapi/ -e GH_REPOSITORY=gh-sh-runner -e GH_TOKEN=${{ env.GH_TOKEN }} -d --name github-hosted-agent github-runner:latest
        
    - name: 'Checking Docker Instance'
      run: |
        docker ps
        sleep 10
        docker ps
        sleep 10
        docker ps -a
        
    - name: 'Inspect Docker Instance logs'
      run: docker logs -f github-hosted-agent
